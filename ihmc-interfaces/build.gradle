buildscript {
   repositories {
      mavenCentral()
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-release" }
      maven { url "http://dl.bintray.com/ihmcrobotics/maven-vendor" }
      maven { url "https://plugins.gradle.org/m2/" }
      mavenLocal()
      jcenter()
   }
   dependencies {
      classpath "us.ihmc:ihmc-build:0.15.1"
      classpath "us.ihmc:ihmc-ci-plugin:0.18.0"
      classpath "us.ihmc:ros2-msg-to-pubsub-generator:0.12.10"
      classpath "com.bmuschko:gradle-docker-plugin:3.2.5"
   }
}

apply plugin: "us.ihmc.ihmc-build"
apply plugin: "us.ihmc.ihmc-ci-plugin"
apply plugin: "com.bmuschko.docker-remote-api"

ihmc {
   loadProductProperties("../product.properties")

   configureDependencyResolution()
   resourceDirectory("main", "messages")
   resourceDirectory("main", "generated-idl")
   javaDirectory("main", "generated-java")
   resourceDirectory("generator", "docker")
   configurePublications()
}

testSuites {
   def prefix = "LIBS-IHMCOPENROBOTICSSOFTWARE"
   bambooPlanKeys = [prefix + "FAST", prefix + "INDEVELOPMENT", prefix + "UI", prefix + "VIDEO"]
}

mainDependencies {
   compile group: 'us.ihmc', name: 'euclid-core', version: '0.5.1'
   compile group: 'us.ihmc', name: 'euclid', version: '0.8.2'
   compile group: 'us.ihmc', name: 'ihmc-pub-sub', version: '0.9.0'
   compile group: 'us.ihmc', name: 'ros2-common-interfaces', version: '0.12.10'
   compile group: 'us.ihmc', name: 'ihmc-commons', version: '0.20.1'
}

testDependencies {
   compile group: "us.ihmc", name: "ihmc-ci-core-api", version: "0.18.0"
   compile group: 'us.ihmc', name: 'ihmc-ros2-library', version: '0.12.1'
}

generatorDependencies {
   compile group: "us.ihmc", name: "ihmc-commons", version: "0.20.1"
   compile group: "us.ihmc", name: "ros2-msg-to-pubsub-generator", version: "0.12.1"
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
   inputDir = file("src/generator/docker")
   tag = "ihmc/ros1-bridge-build"
}


     delete("build/tmp/generateMessages")

     def foundDependency = false
     copy {
        configurations.compile.findAll { it.name.contains("ros2-common-interfaces") }.each {
           from zipTree(it)
           foundDependency = true
        }
        into file("build/tmp/generateMessages/ros2-common-interfaces")
     }

     if (!foundDependency)
     {
        throw new org.gradle.api.GradleException("Could not find ros2-common-interfaces in configurations.compile!")
     }

     
    apply plugin: "us.ihmc.ros2-msg-to-pubsub-generator"

task generateMessages {
  doFirst {
  
     delete("src/main/generated-idl")
     delete("src/main/generated-java")

     messageGenerator.addPackageRootToIDLGenerator(file("build/tmp/generateMessages/ros2-common-interfaces/rcl_interfaces").toPath());
     messageGenerator.addPackageRootToIDLGenerator(file("build/tmp/generateMessages/ros2-common-interfaces/common_interfaces").toPath());
     messageGenerator.addPackageRootToIDLGenerator(file("src/main/messages/ihmc_interfaces").toPath());
     messageGenerator.addPackageRootToROS1Generator(file("src/main/messages/ihmc_interfaces").toPath());

     messageGenerator.addCustomIDLFiles(file("build/tmp/generateMessages/ros2-common-interfaces/").toPath());

     messageGenerator.generate(file("build/tmp/generateMessages/generated-idl").toPath(), file("build/tmp/generateMessages/generated-ros1").toPath(), file("build/tmp/generateMessages/generated-java").toPath());

     copy {
        from "build/tmp/generateMessages/generated-idl/controller_msgs"
        into "src/main/generated-idl/controller_msgs"
     }

     copy {
        from "build/tmp/generateMessages/generated-java/controller_msgs"
        into "src/main/generated-java/controller_msgs"
     }

     copy {
        from "build/tmp/generateMessages/generated-ros1/controller_msgs"
        into "src/main/messages/ros1/controller_msgs"
     }

     messageGenerator.convertDirectoryToUnixEOL(file("src/main/generated-idl").toPath())
     messageGenerator.convertDirectoryToUnixEOL(file("src/main/generated-java").toPath())
     messageGenerator.convertDirectoryToUnixEOL(file("src/main/messages").toPath())
  }
}

// messageGenerator {
//     directoriesToClean.add("src/main/generated-idl")
//     directoriesToClean += "src/main/generated-java"
//     directoriesToClean += "build/tmp/generateMessages"

//     // dependenciesToExtract += "ros2-common-interfaces"

//     extractedDependencies.add("ros2-common-interfaces/rcl_interfaces")
//     extractedDependencies += "ros2-common-interfaces/common_interfaces"
//     sourceDependencies += "src/main/messages/ihmc_interfaces"
//     ros1SourceDependencies += "src/main/messages/ihmc_interfaces"
//     customIDLDependencies += "build/tmp/generateMessages/ros2-common-interfaces"

//     idlOutputDirectory = "src/main/generated-idl"
//     ros1OutputDirectory = "src/main/generated-java"
//     javaOutputDirectory = "src/main/messages/ros1"
// }




// task generateMessages1 {
//   doFirst {
//   	  def generator = new us.ihmc.ros2.rosidl.RosInterfaceGenerator("build/tmp/generateMessages/ros2-common-interfaces");
  
//      delete("src/main/generated-idl")
//      delete("src/main/generated-java")
//      delete("build/tmp/generateMessages")

//      def foundDependency = false
//      copy {
//         configurations.compile.findAll { it.name.contains("ros2-common-interfaces") }.each {
//            from zipTree(it)
//            foundDependency = true
//         }
//         into file("build/tmp/generateMessages/ros2-common-interfaces")
//      }

//      if (!foundDependency)
//      {
//         throw new org.gradle.api.GradleException("Could not find ros2-common-interfaces in configurations.compile!")
//      }


//      generator.addPackageRootToIDLGenerator(file("build/tmp/generateMessages/ros2-common-interfaces/rcl_interfaces").toPath());
//      generator.addPackageRootToIDLGenerator(file("build/tmp/generateMessages/ros2-common-interfaces/common_interfaces").toPath());
//      generator.addPackageRootToIDLGenerator(file("src/main/messages/ihmc_interfaces").toPath());
//      generator.addPackageRootToROS1Generator(file("src/main/messages/ihmc_interfaces").toPath());

//      generator.addCustomIDLFiles(file("build/tmp/generateMessages/ros2-common-interfaces/").toPath());

//      generator.generate(file("build/tmp/generateMessages/generated-idl").toPath(), file("build/tmp/generateMessages/generated-ros1").toPath(), file("build/tmp/generateMessages/generated-java").toPath());

//      copy {
//         from "build/tmp/generateMessages/generated-idl/controller_msgs"
//         into "src/main/generated-idl/controller_msgs"
//      }

//      copy {
//         from "build/tmp/generateMessages/generated-java/controller_msgs"
//         into "src/main/generated-java/controller_msgs"
//      }

//      copy {
//         from "build/tmp/generateMessages/generated-ros1/controller_msgs"
//         into "src/main/messages/ros1/controller_msgs"
//      }

//      generator.convertDirectoryToUnixEOL(file("src/main/generated-idl").toPath())
//      generator.convertDirectoryToUnixEOL(file("src/main/generated-java").toPath())
//      generator.convertDirectoryToUnixEOL(file("src/main/messages").toPath())
//   }
// }
