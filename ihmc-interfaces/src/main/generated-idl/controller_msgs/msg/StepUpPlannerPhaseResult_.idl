#ifndef __controller_msgs__msg__StepUpPlannerPhaseResult__idl__
#define __controller_msgs__msg__StepUpPlannerPhaseResult__idl__

#include "controller_msgs/msg/./StepUpPlannerControlElement_.idl"
#include "geometry_msgs/msg/./Vector3_.idl"
module controller_msgs
{
  module msg
  {
    module dds
    {

      /**
       * Message containing the result of the Step-Up planner for a single phase. The dT is equal to the duration divided by the number of element in the vectors.
       */
      @TypeCode(type="controller_msgs::msg::dds_::StepUpPlannerPhaseResult_")
      struct StepUpPlannerPhaseResult
      {
        /**
         * CoM position trajectory of this phase
         */
        sequence<geometry_msgs::msg::dds::Vector3, 200> com_position;
        /**
         * CoM velocity trajectory of this phase
         */
        sequence<geometry_msgs::msg::dds::Vector3, 200> com_velocity;
        /**
         * CoM acceleration trajectory of this phase
         */
        sequence<geometry_msgs::msg::dds::Vector3, 200> com_acceleration;
        /**
         * Left control values (the first element is the multiplier, the other two are the x and y coordinate of the CoP in foot frame)
         */
        sequence<controller_msgs::msg::dds::StepUpPlannerControlElement, 200> left_controls;
        /**
         * Right control values (the first element is the multiplier, the other two are the x and y coordinate of the CoP in foot frame)
         */
        sequence<controller_msgs::msg::dds::StepUpPlannerControlElement, 200> right_controls;
        /**
         * Duration of the phase
         */
        double duration;
      };
    };
  };
};

#endif
